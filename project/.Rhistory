temp=0
for(i in 1: n){
temp=temp+(samp1[i]-x)^2
}
temp=temp/(n-1)
temp=sqrt(temp)
psigma=temp
}
z=(u-h0mean)/(psigma/sqrt(n))
p=1-pnorm(z)
ans[1]=p
ans[2]=z
return(ans)
}
set.seed(102)
data1=as.numeric(rnorm(100))
ret1 = myhtest(data1, 0.3)
mycfint=function(samp1, alpha=0.05, psigma=0){
ans=vector(length=2)
if(psigma<0 || alpha<=0 || alpha>=1){
return(NULL)
}
n=length(samp1)
x=mean(samp1)
if(psigma==0){
temp=0
for(i in 1: n){
temp=temp+(samp1[i]-x)^2
}
temp=temp/(n-1)
temp=sqrt(temp)
psigma=temp
}
z=qnorm(1-alpha/2)
error=z*psigma/sqrt(n)
ans[1]=x-error
ans[2]=x+error
return(ans)
}
avec = 1:10
> print(mycfint(avec))
myhtest=function(samp1, h0mean, alpha=0.05, psigma=0){
if(psigma<0 || alpha<=0 || alpha>=1){
return(NULL)
}
ans=vector(length=2)
u=mean(samp1)
n=length(samp1)
if(psigma==0){
temp=0
for(i in 1: n){
temp=temp+(samp1[i]-x)^2
}
temp=temp/(n-1)
temp=sqrt(temp)
psigma=temp
}
z=(u-h0mean)/(psigma/sqrt(n))
p=1-pnorm(z)
ans[1]=p
ans[2]=z
return(ans)
}
set.seed(102)
data1=as.numeric(rnorm(100))
ret1 = myhtest(data1, 0.3)
myhtest=function(samp1, h0mean, alpha=0.05, psigma=0){
if(psigma<0 || alpha<=0 || alpha>=1){
return(NULL)
}
ans=vector(length=2)
u=mean(samp1)
n=length(samp1)
if(psigma==0){
temp=0
for(i in 1: n){
temp=temp+(samp1[i]-u)^2
}
temp=temp/(n-1)
temp=sqrt(temp)
psigma=temp
}
z=(u-h0mean)/(psigma/sqrt(n))
p=1-pnorm(z)
ans[1]=p
ans[2]=z
return(ans)
}
set.seed(102)
data1=as.numeric(rnorm(100))
ret1 = myhtest(data1, 0.3)
ret
ret1
qnorm(0.05)
myhtest=function(samp1, h0mean, htype,alpha=0.05, psigma=0){
if(psigma<0 || alpha<=0 || alpha>=1){
return(NULL)
}
ans=vector(length=2)
u=mean(samp1)
n=length(samp1)
if(psigma==0){
temp=0
for(i in 1: n){
temp=temp+(samp1[i]-u)^2
}
temp=temp/(n-1)
temp=sqrt(temp)
psigma=temp
}
z=(u-h0mean)/(psigma/sqrt(n))
p=1-pnorm(z)
ans[1]=p
ans[2]=z
return(ans)
xc=
}
set.seed(102)
data1=as.numeric(rnorm(100))
ret1 = myhtest(data1, 0.3, "lefttail")
ret1
source('~/.active-rstudio-document', echo=TRUE)
ret1
qnorm(1-0.05/2)
pnorm(-1.959964)
myhtest=function(samp1, h0mean, htype,alpha=0.05, psigma=0){
if(psigma<0 || alpha<=0 || alpha>=1){
return(NULL)
}
ans=vector(length=3)
ans[3]=0
u=mean(samp1)
n=length(samp1)
if(psigma==0){
temp=0
for(i in 1: n){
temp=temp+(samp1[i]-u)^2
}
temp=temp/(n-1)
temp=sqrt(temp)
psigma=temp
}
z=(u-h0mean)/(psigma/sqrt(n))
p=pnorm(z)
if(htype=="righttail"){
p=1-pnorm(z)
xc=qnorm(1-alpha)
if(z>xc){
ans[3]=1
}
}
else if(htype=="twotail"){
p=2*p
xc=qnorm(1-alpha/2)
if(z<-1*xc || z>xc){
ans[3]=1
}
}
else{
xc=-1*qnorm(1-alpha)
if(z<cx){
ans[3]=1
}
}
ans[1]=p
ans[2]=z
return(ans)
}
set.seed(102)
data1=as.numeric(rnorm(100))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ret1
ret2
ret3
ret1
source('~/.active-rstudio-document', echo=TRUE)
ret1
myhtest(data1, 0.3, "twotail")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
ret1
source('~/.active-rstudio-document', echo=TRUE)
ret1
ret2
ret3
abs(-1)
qnorm(1-0.05/2)
pnorm(1.959964)
qnorm(99.5)
qnorm(0.95)
pnorm(5)
1-pnorm(5)
1-pnorm(1)
1-pnorm(1.19)
2*(1-pnorm(2))
2*(1-pnorm(3))
9.17/(10/sqrt(18))
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
#==========================================================
path="https://ndshen.github.io/test/movieList.html"
temp=getURL(path ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//div//td//a", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
movieUrl     <- xpathSApply(xmldoc, "//div//td//@href")
n=length(movieTitle)
subpath="http://www.truemovie.com/"
englishName=vector(length=n)
for(i in 1:n){
englishPath=paste0(subpath, movieUrl)
temp=getURL(englishPath ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
englishName[i ]   <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
englishName[i]   <- gsub("\n", "", movieTitle)
englishName[i]   <- gsub("\t", "", movieTitle)
}
englishName
englishPath=paste0(subpath, movieUrl[3])
temp=getURL(englishPath ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
englishName[i ]   <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
englishName[i]   <- gsub("\n", "", movieTitle)
englishName[i]   <- gsub("\t", "", movieTitle)
englishName[3]
englishPath=paste0(subpath, movieUrl[3])
temp=getURL(englishPath ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
englishName[3 ]   <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
englishName[3]   <- gsub("\n", "", movieTitle)
englishName[3]   <- gsub("\t", "", movieTitle)
englishName[3]
movieUrl[3]
englishPath=paste0(subpath, movieUrl[3])
temp=getURL(englishPath ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
englishName[3 ]   <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
englishName[3]   <- gsub("\n", "", movieTitle)
englishName[3]   <- gsub("\t", "", movieTitle)englishPath=paste0(subpath, movieUrl[i])
temp=getURL(englishPath ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
english  <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
english <- gsub("\n", "", english)
english <- gsub("\t", "", english)
englishName[i]=english
englishPath=paste0(subpath, movieUrl[3])
temp=getURL(englishPath ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
english  <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
english <- gsub("\n", "", english)
english <- gsub("\t", "", english)
englishName[3]=english
englishName[3]
Sys.setlocale(category = "LC_ALL", locale = "cht")
Sys.setlocale(category = "LC_ALL", locale = "cht")
englishName[3]
englishPath=paste0(subpath, movieUrl[3])
temp=getURL(englishPath ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
english  <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
english <- gsub("\n", "", english)
english <- gsub("\t", "", english)
englishName[3]=english
englishName[3]
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
path="http://www.truemovie.com/2016moviedata/FantasticBeastsandWheretoFindThem.htm"
temp=getURL(path ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//td/p[3]", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
View(movieList)
setwd("C:\\Users\\User\\Desktop\\大二上\\test\\project")
movieList=read.csv("movieList4.0.csv")
movieList[1]=NULL
rating=movieList[,3]
englishName=movieList[,2]
movieTitle=movieList[,1]
startNo = 3596
endNo   = 4952
subPath <- "https://www.ptt.cc/bbs/movie/index"
alldata = data.frame()
for( pid in startNo:endNo )
{
urlPath <- paste(subPath,pid,  ".html", sep='')
temp    <- getURL(urlPath, encoding = "big5")
xmldoc  <- htmlParse(temp)
title   <- xpathSApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title   <- gsub("\n", "", title)
title   <- gsub("\t", "", title)
date    <-xpathSApply(xmldoc, "//div[@class='date']", xmlValue)
Erroresult<- tryCatch({
subdata <- data.frame(title, date)
alldata <- rbind(alldata, subdata)
}, warning = function(war) {
print(paste("MY_WARNING:  ", urlPath))
}, error = function(err) {
print(paste("MY_ERROR:  ", urlPath))
}, finally = {
print(paste("End Try&Catch", urlPath))
})
}
#======================================================================
popular<-vector(length=length(movieTitle))
good1<-vector(length=length(movieTitle))
good2<-vector(length=length(movieTitle))
good3<-vector(length=length(movieTitle))
good4<-vector(length=length(movieTitle))
bad1<-vector(length=length(movieTitle))
bad2<-vector(length=length(movieTitle))
for(movieListIndex in 1 : length(movieTitle)){
movieName<-movieTitle[movieListIndex]
frequency=0
good1Num=0
good2Num=0
good3Num=0
good4Num=0
bad1Num=0
bad2Num=0
for(i in 1:nrow(alldata)){
if(grepl(movieName, alldata[i, 1])){
frequency=frequency+1
if(grepl("好雷", alldata[i,1])){
good1Num=good1Num+1
}
else if(grepl("普好雷", alldata[i, 1])){
good1Num=good1Num+1
}
else if(grepl("普偏好雷", alldata[i, 1])){
good1Num=good1Num+1
}
else if(grepl("好無雷", alldata[i, 1])){
good1Num=good1Num+1
}
else if(grepl("中上雷", alldata[i, 1])){
good2Num=good2Num+1
}
else if(grepl("大好雷", alldata[i, 1])){
good3Num=good3Num+1
}
else if(grepl("超好雷", alldata[i, 1])){
good4Num=good4Num+1
}
else if(grepl("負雷", alldata[i, 1])){
bad1Num=bad1Num+1
}
else if(grepl("負無雷", alldata[i, 1])){
bad1Num=bad1Num+1
}
else if(grepl("大負雷", alldata[i, 1])){
bad2Num=bad2Num+1
}
}
}
popular[movieListIndex]=frequency
good1[movieListIndex]=good1Num
good2[movieListIndex]=good2Num
good3[movieListIndex]=good3Num
good4[movieListIndex]=good4Num
bad1[movieListIndex]=bad1Num
bad2[movieListIndex]=bad2Num
}
pttRate=data.frame(movieTitle, good1, good2, good3, good4, bad1, bad2)
write.table(pttRate, file = "C:/Users/User/Desktop/大二上/test/project/pttRate.csv")
good<-vector(length=length(movieTitle))
bad<-vector(length=length(movieTitle))
for(i in 1: length(movieTitle)){
good[i]=good1[i]+2*good2[i]+3*good3[i]+4*good4[i]
bad[i]=2*bad1[i]+4*bad2[i]
}
movieList[c("pttPopularity","pttGood", "pttBad")] <-NA
movieList$pttPopularity=popular
movieList$pttGood=good
movieList$pttBad=bad
write.table(movieList, file = "C:/Users/User/Desktop/大二上/test/project/movieList5.0.csv")
startNo = 3596
endNo   = 4952
subPath <- "https://www.ptt.cc/bbs/movie/index"
alldata = data.frame()
for( pid in startNo:endNo )
{
urlPath <- paste(subPath,pid,  ".html", sep='')
temp    <- getURL(urlPath, encoding = "big5")
xmldoc  <- htmlParse(temp)
title   <- xpathSApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title   <- gsub("\n", "", title)
title   <- gsub("\t", "", title)
date    <-xpathSApply(xmldoc, "//div[@class='date']", xmlValue)
Erroresult<- tryCatch({
subdata <- data.frame(title, date)
alldata <- rbind(alldata, subdata)
}, warning = function(war) {
print(paste("MY_WARNING:  ", urlPath))
}, error = function(err) {
print(paste("MY_ERROR:  ", urlPath))
}, finally = {
print(paste("End Try&Catch", urlPath))
})
}
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
startNo = 3596
endNo   = 4952
subPath <- "https://www.ptt.cc/bbs/movie/index"
alldata = data.frame()
for( pid in startNo:endNo )
{
urlPath <- paste(subPath,pid,  ".html", sep='')
temp    <- getURL(urlPath, encoding = "big5")
xmldoc  <- htmlParse(temp)
title   <- xpathSApply(xmldoc, "//div[@class=\"title\"]", xmlValue)
title   <- gsub("\n", "", title)
title   <- gsub("\t", "", title)
date    <-xpathSApply(xmldoc, "//div[@class='date']", xmlValue)
Erroresult<- tryCatch({
subdata <- data.frame(title, date)
alldata <- rbind(alldata, subdata)
}, warning = function(war) {
print(paste("MY_WARNING:  ", urlPath))
}, error = function(err) {
print(paste("MY_ERROR:  ", urlPath))
}, finally = {
print(paste("End Try&Catch", urlPath))
})
}
#======================================================================
popular<-vector(length=length(movieTitle))
good1<-vector(length=length(movieTitle))
good2<-vector(length=length(movieTitle))
good3<-vector(length=length(movieTitle))
good4<-vector(length=length(movieTitle))
bad1<-vector(length=length(movieTitle))
bad2<-vector(length=length(movieTitle))
for(movieListIndex in 1 : length(movieTitle)){
movieName<-movieTitle[movieListIndex]
frequency=0
good1Num=0
good2Num=0
good3Num=0
good4Num=0
bad1Num=0
bad2Num=0
for(i in 1:nrow(alldata)){
if(grepl(movieName, alldata[i, 1])){
frequency=frequency+1
if(grepl("好雷", alldata[i,1])){
good1Num=good1Num+1
}
else if(grepl("普好雷", alldata[i, 1])){
good1Num=good1Num+1
}
else if(grepl("普偏好雷", alldata[i, 1])){
good1Num=good1Num+1
}
else if(grepl("好無雷", alldata[i, 1])){
good1Num=good1Num+1
}
else if(grepl("中上雷", alldata[i, 1])){
good2Num=good2Num+1
}
else if(grepl("大好雷", alldata[i, 1])){
good3Num=good3Num+1
}
else if(grepl("超好雷", alldata[i, 1])){
good4Num=good4Num+1
}
else if(grepl("負雷", alldata[i, 1])){
bad1Num=bad1Num+1
}
else if(grepl("負無雷", alldata[i, 1])){
bad1Num=bad1Num+1
}
else if(grepl("大負雷", alldata[i, 1])){
bad2Num=bad2Num+1
}
}
}
popular[movieListIndex]=frequency
good1[movieListIndex]=good1Num
good2[movieListIndex]=good2Num
good3[movieListIndex]=good3Num
good4[movieListIndex]=good4Num
bad1[movieListIndex]=bad1Num
bad2[movieListIndex]=bad2Num
}
pttRate=data.frame(movieTitle, good1, good2, good3, good4, bad1, bad2)
write.table(pttRate, file = "C:/Users/User/Desktop/大二上/test/project/pttRate.csv")
good<-vector(length=length(movieTitle))
bad<-vector(length=length(movieTitle))
for(i in 1: length(movieTitle)){
good[i]=good1[i]+2*good2[i]+3*good3[i]+4*good4[i]
bad[i]=2*bad1[i]+4*bad2[i]
}
movieList[c("pttPopularity","pttGood", "pttBad")] <-NA
movieList$pttPopularity=popular
movieList$pttGood=good
movieList$pttBad=bad
write.table(movieList, file = "C:/Users/User/Desktop/大二上/test/project/movieList5.0.csv")
View(pttRate)
View(alldata)
View(alldata)
View(alldata)
alldata
