library(pbapply)
library(rcharts)
install.packages("devtools")
devtools::install_github("hrbrmstr/omdbapi")
library(omdbapi)
library(dplyr)
library(pbapply)
library(rcharts)
rating=vector(length(length(movieTitle)))
length(movieTitle)
rating=vector(length=length(movieTitle))
movieList=data.frame(movieTitle, movieUrl, rating)
for(i in 1:length(movieTitle)){
movie=movieUrl[[i]]
id=0
searchList=search_by_title(movie)
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}
for(i in 1:length(movieTitle)){
movie=movieUrl[[i]]
id=0
searchList=search_by_title(movie)
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}
rating
movieUrl[[2]]
search_by_title(movieUrl[[2]])
search_by_title(movieUrl[[3]])
movieUrl[[3]]
movieUrl[[4]]
movieUrl[[5]]
movieUrl[[6]]
movieUrl
movieUrl[[10]]
movieUrl[[11]]
search_by_title(movieUrl[[11]])
rating[11]
movie="A Monster Calls"
id=0
searchList=search_by_title(movie)
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating=movieInfo$imdbRating
rating
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
continue
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
rating[i]="NA"
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}
rating
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
rating[i]="NA"
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}
movieList=data.frame(movieTitle, movieUrl, rating)
movieList
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}
movieList=data.frame(movieTitle, movieUrl, rating)
movieList
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
Erroresult<- tryCatch({
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
}
movieList=data.frame(movieTitle, movieUrl, rating)
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
}
rating
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
}
rating
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
for(j in 1:nrow(searchList)){
if(movie==searchList[j,1]){
id=searchList[j,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
}
rating
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
for(j in 1:nrow(searchList)){
if(movie==searchList[j,1]){
id=searchList[j,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
}
movieList=data.frame(movieTitle, movieUrl, rating)
movieList
movie="Haunted Campus"
id=0
searchList=search_by_title(movie)
for(i in 1:nrow(searchList)){
if(movie==searchList[i,1]){
id=searchList[i,3]
break
}
}
movieInfo=find_by_id(id)
rating=movieInfo$imdbRating
rating
rating
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
for(j in 1:nrow(searchList)){
if(movie==searchList[j,1]){
id=searchList[j,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
}
movieList=data.frame(movieTitle, movieUrl, rating)
movieList
devtools::install_github("hrbrmstr/omdbapi")
df1
library(XLConnect)
setwd("C:\\Users\\User\\Desktop\\大二上\\test\\project")
exc <- loadWorkbook("movieList_part.csv(1).xlsx")
df1 <- readWorksheet(exc,1)
library(XLConnect)
setwd("C:\\Users\\User\\Desktop\\大二上\\test\\project")
exc <- loadWorkbook("movieList_part.csv(1).xlsx")
df1 <- readWorksheet(exc,1)
setwd("C:\\Users\\User\\Desktop\\大二上\\test\\project")
exc <- loadWorkbook("movieList_part.csv(1).xlsx")
df1 <- readWorksheet(exc,1)
df2=read.csv("movieList2.0.csv")
df2
df2[,2]
df2[,3]
setwd("C:\\Users\\User\\Desktop\\大二上\\test\\project")
exc <- loadWorkbook("movieList_part.csv(1).xlsx")
df2=read.csv("movieList2.0.csv")
movieUrl=df2[,3]
setwd("C:\\Users\\User\\Desktop\\大二上\\test\\project")
df2=read.csv("movieList2.0.csv")
movieUrl=df2[,3]
movieTitle=df2[,2]
movieTitle
devtools::install_github("hrbrmstr/omdbapi")
library(omdbapi)
library(dplyr)
library(pbapply)
library(rcharts)
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
install.packages("devtools")
devtools::install_github("hrbrmstr/omdbapi")
library(omdbapi)
library(dplyr)
library(pbapply)
library(rcharts)
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
setwd("C:\\Users\\User\\Desktop\\大二上\\test\\project")
df2=read.csv("movieList2.0.csv")
movieUrl=df2[,3]
movieTitle=df2[,2]
rating=vector(length=length(movieTitle))
for(i in 1:length(movieTitle)){
movie=movieUrl[i]
id=0
searchList=search_by_title(movie)
Erroresult<- tryCatch({
for(j in 1:nrow(searchList)){
if(movie==searchList[j,1]){
id=searchList[j,3]
break
}
}
movieInfo=find_by_id(id)
rating[i]=movieInfo$imdbRating
next
}, warning = function(war) {
print(paste("MY_WARNING:  ", movie))
}, error = function(err) {
print(paste("MY_ERROR:  ", movie))
}, finally = {
print(paste("End Try&Catch", movie))
})
}
movieList=data.frame(movieTitle, movieUrl, rating)
movieList
view(movieList)
view(movieList)
View(movieList)
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
path="http://www.truemovie.com/tairelease.htm"
temp=getURL(path ,encoding="utf-8")
temp
temp=gsub("; charset=big5", '', temp)
temp
test="a and b"
test1=strsplit(test,split="and", fixed=T)
test1
test1[1]
test1[[1]]
test1[[[1]]]
test="a and b"
test1=strsplit(test,split="and", fixed=F)
test1
test1[[1]]
test1[[1]][1]
test2=paste(test1[[1]][1], test1[[1]][2])
test2
test2=paste(test1[[1]][1],"or",test1[[1]][2])
test2
test2=paste(test1[[1]][1],"or",test1[[1]][2], sep='')
test2
test2=paste(test1[[1]][1],,'\n',"or",test1[[1]][2], sep='')
test2=paste(test1[[1]][1],"\nor",test1[[1]][2], sep='')
test2
test2=paste(test1[[1]][1],"\n","or",test1[[1]][2], sep='')
test2
test2=paste(test1[[1]][1],"\n","or",test1[[1]][2], sep='')
test2
test2=paste(test1[[1]][1],"\\n","or",test1[[1]][2], sep='')
test2
test2=paste(test1[[1]][1],"//n","or",test1[[1]][2], sep='')
test2
test2=paste(test1[[1]][1],"\n",test1[[1]][2],)
test2=paste(test1[[1]][1],"\n",test1[[1]][2], )
test2=paste(test1[[1]][1],"\n",test1[[1]][2],sep='' )
test2
newline=as.character(\n)
newline=as.character("\n")
test2=paste(test1[[1]][1],newline,test1[[1]][2],sep='' )
test2
utf="<meta charset=/"utf-8/">"
utf
utf="/<meta charset=/"utf-8/"/>"
utf="<meta charset=\"utf-8\">"
utf
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
path="http://www.truemovie.com/tairelease.htm"
temp=getURL(path ,encoding="utf-8")
temp=gsub("; charset=big5", '', temp)
utf="<meta charset=\"utf-8\">"
temp=strsplit(temp, split="<head>", fixed=T)
temp=paste(temp[[1]][1], "<head>", utf, temp[[1]][2], sep='')
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//div//td//a", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
movieTitle
temp
temp=paste(temp[[1]][1], "<head>","\n" utf, temp[[1]][2], sep='')
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//div//td//a", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
temp=paste(temp[[1]][1], "<head>","\n", utf, temp[[1]][2], sep='')
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//div//td//a", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
movieTitle
path="http://www.truemovie.com/tairelease.htm"
temp=getURL(path ,encoding="big5")
temp=gsub("; charset=big5", '', temp)
utf="<meta charset=\"utf-8\">"
temp=strsplit(temp, split="<head>", fixed=T)
temp=paste(temp[[1]][1], "<head>","\n", utf, temp[[1]][2], sep='')
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//div//td//a", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
movieTitle
path="https://ndshen.github.io/test/movieList.html"
temp=getURL(path ,encoding="utf-8")
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//div//td//a", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
library(XML)
library(RCurl)
library(httr)
Sys.setlocale(category = "LC_ALL", locale = "cht")
path="http://www.truemovie.com/tairelease.htm"
temp=getURL(path ,encoding="utf-8")
temp=gsub("; charset=big5", '', temp)
xmldoc=htmlParse(temp, encoding="utf-8")
movieTitle   <- xpathSApply(xmldoc, "//div//td//a", xmlValue)
movieTitle   <- gsub("\n", "", movieTitle)
movieTitle   <- gsub("\t", "", movieTitle)
